MY_VIRTUALENV_NAMES=${MY_VIRTUALENV_NAMES:-.venv}
DETECT_VIRTUALENV_STATUS=on

function abs_path() {
    builtin cd "$1"
    /bin/pwd -P
}

function ancestors_of() {
    local dir=$( abs_path "${1:-.}" )
    local last
    while [ "$dir" != "$last" ]
    do
        printf "%q\n" "${dir%/}" 2>/dev/null
        last="$dir"
        dir=$( dirname "$dir" )
    done
}

function match_parent() {
    # ancestors_of /foo/bar/baz | match_parent /foo/bie
    #   /foo/bie
    printf -v ancestor_parent "%q" "$( dirname "$1" )"
    grep -F -q "$ancestor_parent" && printf "%q\n" "$1" 2>/dev/null
}

function append_relpath() {
    while read -r parent
    do
        for child in "$@"
        do
            printf "%s/%q\n" "$parent" "$child" 2>/dev/null
        done
    done
}

function has_activate_script() {
    while read -r candidate
    do
        local unescaped_candidate="$( eval echo "$candidate" )"
        [ -r "${unescaped_candidate}/bin/activate" ] && echo "$candidate" 2>/dev/null
    done
}

function find_virtualenvs() {
    ancestors_of | tee >( append_relpath "$@" ) >( match_parent "$VIRTUAL_ENV" ) >/dev/null | has_activate_script
}

function switch_virtualenvs() {
    local new="$1"
    [ "$VIRTUAL_ENV" = "$new" ] && return
    [ -n "${VIRTUAL_ENV+virtualenv active}" ] && deactivate
    local activate="$new/bin/activate"
    test -e "$activate" && source "$activate"
    true
}

function status_should_be() {
    case "$1" in
        status) echo ${DETECT_VIRTUALENV_STATUS-on} ;;
        on)  unset  DETECT_VIRTUALENV_STATUS     ;;
        off) export DETECT_VIRTUALENV_STATUS=off ;;
        deactivate) status_should_be off; switch_virtualenvs;;
        toggle)
            if [ "$DETECT_VIRTUALENV_STATUS" = "off" ]
            then
                status_should_be on
            else
                status_should_be off
            fi
        ;;
    esac
}

function detect_virtualenv() {
    local -a args
    while [ "$#" -gt 0 ]
    do
        local arg="$1"; shift
        if [ "${arg#--}" != "$arg" ]
        then
            status_should_be "${arg#--}"
        else
            args=("${args[@]}" "$arg")
        fi
    done

    if [ "${DETECT_VIRTUALENV_STATUS-on}" != "on" ]
    then
        return
    fi

    local names=${args[0]:-$MY_VIRTUALENV_NAMES}
    IFS=':' read -ra virtualenv_names <<< "$names"

    first="$( eval echo "$( find_virtualenvs "${virtualenv_names[@]}" | head -1 )" )"
    switch_virtualenvs "$first"
}

function detect_virtualenv_on_prompt() {
  if [ "${PROMPT_COMMAND/detect_virtualenv//}" = "$PROMPT_COMMAND" ] ; then
    export PROMPT_COMMAND="detect_virtualenv${PROMPT_COMMAND:+;$PROMPT_COMMAND}"
  fi
}

if [ $# -gt 0 ]
then
  case $1 in
    on_prompt) shift; detect_virtualenv_on_prompt ;;
  esac
fi

if [ $# -gt 0 ]
then
  echo detect_virtualenv: ignoring unknown parameters: $@ >&2
fi

# vim: ft=sh
